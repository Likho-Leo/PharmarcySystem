@model dynamic

@{
    ViewData["Title"] = "Prescription Preview";
    Layout = null; // No layout for popup
}

<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>@ViewData["Title"]</title>

    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <!-- Font Awesome -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">

    <style>
        .popup-container {
            display: flex;
            flex-direction: column;
            height: 100vh;
            background: #f8f9fa;
        }

        .popup-header {
            background: #198754;
            color: white;
            padding: 1rem;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

            .popup-header h3 {
                margin: 0;
            }

        .close-btn {
            background: none;
            border: none;
            color: white;
            font-size: 1.5rem;
            cursor: pointer;
        }

        .popup-body {
            flex: 1;
            display: flex;
            overflow: hidden;
        }

        .controls-panel {
            flex: 1;
            padding: 1rem;
            overflow-y: auto;
            background: white;
            border-right: 1px solid #dee2e6;
        }

        .pdf-panel {
            flex: 1;
            position: relative;
            background: #f8f9fa;
        }

        .section-card {
            background: white;
            border: 1px solid #dee2e6;
            border-radius: 0.375rem;
            margin-bottom: 1rem;
            overflow: hidden;
        }

        .section-title {
            background: #e9ecef;
            padding: 0.75rem 1rem;
            font-weight: 600;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .section-card .row {
            padding: 1rem;
        }

        .medication-line {
            border: 1px solid #dee2e6;
            border-radius: 0.375rem;
            padding: 1rem;
            margin-bottom: 1rem;
            background: #f8f9fa;
        }

        .status-badge {
            padding: 0.25rem 0.75rem;
            border-radius: 1rem;
            font-size: 0.875rem;
            font-weight: 600;
            text-align: center;
            display: inline-block;
        }

        .status-pending {
            background-color: #fff3cd;
            color: #856404;
        }

        .status-ready {
            background-color: #d1ecf1;
            color: #0c5460;
        }

        .status-dispensed {
            background-color: #d4edda;
            color: #155724;
        }

        .status-cancelled {
            background-color: #f8d7da;
            color: #721c24;
        }

        .pdf-viewer {
            width: 100%;
            height: 100%;
            border: none;
        }

        .pdf-placeholder {
            display: flex;
            align-items: center;
            justify-content: center;
            height: 100%;
            color: #6c757d;
        }

        .loading-overlay {
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: rgba(255, 255, 255, 0.9);
            display: none;
            align-items: center;
            justify-content: center;
            z-index: 1000;
        }

        .loading-spinner {
            width: 3rem;
            height: 3rem;
            border: 0.25rem solid #f3f3f3;
            border-top: 0.25rem solid #198754;
            border-radius: 50%;
            animation: spin 1s linear infinite;
        }

       /*  keyframes spin {
            0%

        {
            transform: rotate(0deg);
        } */

        100% {
            transform: rotate(360deg);
        }

        }

        .action-buttons {
            display: flex;
            gap: 1rem;
            justify-content: flex-end;
            padding-top: 1rem;
            border-top: 1px solid #dee2e6;
        }
    </style>
</head>
<body>
    <div class="popup-container">
        <div class="popup-header">
            <h3><i class="fas fa-prescription-bottle-alt"></i> Prescription Preview</h3>
            <button type="button" class="close-btn" onclick="closePopup()">
                <i class="fas fa-times"></i>
            </button>
        </div>

        <div class="popup-body">
            <!-- Controls Panel -->
            <div class="controls-panel">
                <form id="prescriptionForm">
                    <input type="hidden" id="prescriptionId" value="@Model.PrescriptionID" />

                    <!-- Basic Information -->
                    <div class="section-card">
                        <div class="section-title">
                            <i class="fas fa-info-circle"></i>
                            Basic Information
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <label class="form-label">Prescription Date</label>
                                <input type="date" class="form-control" id="prescriptionDate" value="@Model.PrescriptionDate.ToString("yyyy-MM-dd")" />
                            </div>
                            <div class="col-md-6">
                                <label class="form-label">Patient ID</label>
                                <input type="text" class="form-control" id="patientId" value="@Model.PatientIdNumber" readonly />
                            </div>
                            <div class="col-md-12 mt-2">
                                <label class="form-label">Patient Name</label>
                                <input type="text" class="form-control" value="@Model.PatientName" readonly />
                            </div>
                        </div>
                    </div>

                    <!-- Doctor Information -->
                    <div class="section-card">
                        <div class="section-title">
                            <i class="fas fa-user-md"></i>
                            Doctor Information
                        </div>
                        <div class="row">
                            <div class="col-md-12">
                                <select class="form-select" id="doctorId">
                                    @foreach (var doctor in Model.AvailableDoctors)
                                    {
                                        <option value="@doctor.Id" selected="@(doctor.Id == Model.DoctorId)">
                                            @doctor.DisplayName
                                        </option>
                                    }
                                </select>
                            </div>
                        </div>
                    </div>

                    <!-- Status Information -->
                    <div class="section-card">
                        <div class="section-title">
                            <i class="fas fa-flag"></i>
                            Status
                        </div>
                        <div class="row">
                            <div class="col-md-8">
                                <select class="form-select" id="prescriptionStatus">
                                    @foreach (string status in Model.PrescriptionStatuses)
                                    {
                                        <option value="@status" selected="@(status == Model.PrescriptionStatus)">
                                            @status
                                        </option>
                                    }
                                </select>
                            </div>
                            <div class="col-md-4">
                                <span class="status-badge status-@Model.PrescriptionStatus.ToLower()">
                                    @Model.PrescriptionStatus
                                </span>
                            </div>
                        </div>
                    </div>

                    <!-- Medication Lines -->
                    <div class="section-card">
                        <div class="section-title">
                            <i class="fas fa-pills"></i>
                            Medications
                            <button type="button" class="btn btn-success btn-sm ms-auto" onclick="addMedicationLine()">
                                <i class="fas fa-plus"></i> Add Medication
                            </button>
                        </div>

                        <div id="medicationLines">
                            @if (Model.MedicationLines != null && ((Array)Model.MedicationLines).Length > 0)
                            {
                                @for (int i = 0; i < ((Array)Model.MedicationLines).Length; i++)
                                {
                                    var medication = ((dynamic[])Model.MedicationLines)[i];
                                    <div class="medication-line" data-index="@i">
                                        <div class="row">
                                            <div class="col-md-12 mb-2">
                                                <label class="form-label">Medication</label>
                                                <select class="form-select medication-select" name="medicationId">
                                                    @foreach (var med in Model.AvailableMedications)
                                                    {
                                                        <option value="@med.Id" selected="@(med.Id == medication.MedicationId)">
                                                            @med.DisplayName
                                                        </option>
                                                    }
                                                </select>
                                            </div>
                                            <div class="col-md-4">
                                                <label class="form-label">Quantity</label>
                                                <input type="number" class="form-control" name="quantity" min="1" value="@medication.Quantity" />
                                            </div>
                                            <div class="col-md-4">
                                                <label class="form-label">Repeats</label>
                                                <input type="number" class="form-control" name="repeats" min="0" max="5" value="@medication.NumberOfRepeats" />
                                            </div>
                                            <div class="col-md-4">
                                                <label class="form-label">&nbsp;</label>
                                                <button type="button" class="btn btn-danger w-100" onclick="removeMedicationLine(this)">
                                                    <i class="fas fa-trash"></i> Remove
                                                </button>
                                            </div>
                                            <div class="col-md-12 mt-2">
                                                <label class="form-label">Instructions</label>
                                                <input type="text" class="form-control" name="instructions" value="@medication.Instructions" placeholder="e.g., Take 1 tablet twice daily" />
                                            </div>
                                        </div>
                                    </div>
                                }
                            }
                            else
                            {
                                <div class="text-center text-muted" id="noMedicationsMessage">
                                    <i class="fas fa-pills fa-3x mb-3"></i>
                                    <p>No medications added yet. Click "Add Medication" to start.</p>
                                </div>
                            }
                        </div>
                    </div>

                    <!-- Action Buttons -->
                    <div class="action-buttons">
                        <button type="button" class="btn btn-outline-success" onclick="closePopup()">
                            <i class="fas fa-times"></i> Cancel
                        </button>
                        <button type="button" class="btn btn-success" onclick="savePrescription()">
                            <i class="fas fa-save"></i> Save Changes
                        </button>
                    </div>
                </form>
            </div>

            <!-- PDF Panel -->
            <div class="pdf-panel">
                <div class="loading-overlay" id="loadingOverlay">
                    <div class="loading-spinner"></div>
                </div>

                @if (Model.PrescriptionPDF)
                {
                    <iframe class="pdf-viewer"
                            src="~/Images/Prescription1Doe.pdf"
                            type="application/pdf">
                        <div class="pdf-placeholder">
                            <div class="text-center">
                                <i class="fas fa-file-pdf fa-3x mb-3"></i>
                                <p>Your browser doesn't support PDF viewing. <a href="~/Images/Prescription1Doe.pdf" target="_blank">Download PDF</a></p>
                            </div>
                        </div>
                    </iframe>
                }
                else
                {
                    <div class="pdf-placeholder">
                        <div class="text-center">
                            <i class="fas fa-file-pdf fa-3x mb-3"></i>
                            <p>No PDF available for this prescription</p>
                        </div>
                    </div>
                }
            </div>


    <!-- Bootstrap JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>

    <script>
        let medicationIndex = @(Model.MedicationLines != null ? ((Array)Model.MedicationLines).Length : 0);
        const availableMedications = @Html.Raw(Json.Serialize(Model.AvailableMedications));

        function closePopup() {
            if (window.opener) {
                window.close();
            } else {
                history.back();
            }
        }

        function addMedicationLine() {
            const medicationLines = document.getElementById('medicationLines');

            // Remove "no medications" message if it exists
            const noMedicationsMessage = document.getElementById('noMedicationsMessage');
            if (noMedicationsMessage) {
                noMedicationsMessage.remove();
            }

            const newLine = document.createElement('div');
            newLine.className = 'medication-line';
            newLine.setAttribute('data-index', medicationIndex);

            let medicationOptions = '<option value="">Select medication...</option>';
            availableMedications.forEach(med => {
                medicationOptions += `<option value="${med.Id}">${med.DisplayName}</option>`;
            });

            newLine.innerHTML = `
                <div class="row">
                    <div class="col-md-12 mb-2">
                        <label class="form-label">Medication</label>
                        <select class="form-select medication-select" name="medicationId">
                            ${medicationOptions}
                        </select>
                    </div>
                    <div class="col-md-4">
                        <label class="form-label">Quantity</label>
                        <input type="number" class="form-control" name="quantity" min="1" value="1" />
                    </div>
                    <div class="col-md-4">
                        <label class="form-label">Repeats</label>
                        <input type="number" class="form-control" name="repeats" min="0" max="5" value="0" />
                    </div>
                    <div class="col-md-4">
                        <label class="form-label">&nbsp;</label>
                        <button type="button" class="btn btn-danger w-100" onclick="removeMedicationLine(this)">
                            <i class="fas fa-trash"></i> Remove
                        </button>
                    </div>
                    <div class="col-md-12 mt-2">
                        <label class="form-label">Instructions</label>
                        <input type="text" class="form-control" name="instructions" placeholder="e.g., Take 1 tablet twice daily" />
                    </div>
                </div>
            `;

            medicationLines.appendChild(newLine);
            medicationIndex++;
        }

        function removeMedicationLine(button) {
            const line = button.closest('.medication-line');
            if (line) {
                line.remove();

                // Show "no medications" message if no lines remain
                const medicationLines = document.getElementById('medicationLines');
                if (medicationLines.querySelectorAll('.medication-line').length === 0) {
                    medicationLines.innerHTML = `
                        <div class="text-center text-muted" id="noMedicationsMessage">
                            <i class="fas fa-pills fa-3x mb-3"></i>
                            <p>No medications added yet. Click "Add Medication" to start.</p>
                        </div>
                    `;
                }
            }
        }

        function savePrescription() {
            const loadingOverlay = document.getElementById('loadingOverlay');
            loadingOverlay.style.display = 'flex';

            const formData = {
                PrescriptionID: document.getElementById('prescriptionId').value,
                PrescriptionDate: document.getElementById('prescriptionDate').value,
                PatientIdNumber: document.getElementById('patientId').value,
                DoctorId: document.getElementById('doctorId').value,
                PrescriptionStatus: document.getElementById('prescriptionStatus').value,
                MedicationLines: []
            };

            // Collect medication lines
            const medicationLines = document.querySelectorAll('.medication-line');
            medicationLines.forEach(line => {
                const medicationId = line.querySelector('[name="medicationId"]').value;
                const quantity = line.querySelector('[name="quantity"]').value;
                const repeats = line.querySelector('[name="repeats"]').value;
                const instructions = line.querySelector('[name="instructions"]').value;

                if (medicationId && quantity) {
                    formData.MedicationLines.push({
                        MedicationId: parseInt(medicationId),
                        Quantity: parseInt(quantity),
                        NumberOfRepeats: parseInt(repeats) || 0,
                        Instructions: instructions || ''
                    });
                }
            });

            fetch('@Url.Action("UpdateFromPopup", "Prescriptions")', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(formData)
            })
            .then(response => response.json())
            .then(data => {
                loadingOverlay.style.display = 'none';
                if (data.success) {
                    alert('Prescription updated successfully!');
                    if (window.opener) {
                        window.opener.location.reload();
                        window.close();
                    } else {
                        window.location.reload();
                    }
                } else {
                    alert('Error: ' + data.message);
                }
            })
            .catch(error => {
                loadingOverlay.style.display = 'none';
                console.error('Error:', error);
                alert('An error occurred while saving the prescription.');
            });
        }

        // Update status badge when status changes
        document.getElementById('prescriptionStatus').addEventListener('change', function() {
            const statusBadge = document.querySelector('.status-badge');
            const newStatus = this.value;
            statusBadge.textContent = newStatus;
            statusBadge.className = `status-badge status-${newStatus.toLowerCase()}`;
        });
    </script>
</body>
</html>